server.port=8081
spring.datasource.url=jdbc:mysql://localhost:3306/employeedetails
spring.datasource.username=root
spring.datasource.password=${MYSQL_PASS:pass}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# this is for timeout of the request
hystrix.command.getTokenCommand.execution.isolation.thread.timeoutInMilliseconds=2000 
# two strategy = Thread and semophore , Thread - IO calls, semaphore - internal
hystrix.command.getTokenCommand.execution.isolation.strategy=THREAD
hystrix.command.getTokenCommand.execution.timeout.enabled=true
hystrix.command.getTokenCommand.execution.isolation.thread.interruptOnTimeout=true
hystrix.command.getTokenCommand.execution.isolation.thread.interruptOnCancel=false
#fallback
hystrix.command.getTokenCommand.fallback.enabled=true
hystrix.command.getTokenCommand.fallback.isolation.semaphore.maxConcurrentRequests=50
#circuitBreaker
hystrix.command.getTokenCommand.circuitBreaker.enabled=true
hystrix.command.getTokenCommand.circuitBreaker.forceOpen=false
hystrix.command.getTokenCommand.circuitBreaker.forceClosed=false
hystrix.command.getTokenCommand.circuitBreaker.sleepWindowInMilliseconds=5000
# this is the % of records should fail in order to open the circuit
hystrix.command.getTokenCommand.circuitBreaker.errorThresholdPercentage=30
# window of the request
hystrix.command.getTokenCommand.circuitBreaker.requestVolumeThreshold=20
hystrix.command.getTokenCommand.metrics.rollingStats.timeInMilliseconds=10000
#threadpool
# core size - threads in thread pool
hystrix.threadpool.getTokenCommand.coreSize=15
hystrix.threadpool.getTokenCommand.maximumSize=20
hystrix.threadpool.getTokenCommand.maxQueueSize=40
hystrix.threadpool.getTokenCommand.queueSizeRejectionThreshold=40
hystrix.threadpool.getTokenCommand.allowMaximumSizeToDivergeFromCoreSize=true
hystrix.threadpool.getTokenCommand.metrics.rollingStats.timeInMilliseconds=10000
# this is for timeout of the request
hystrix.command.postTokenCommand.execution.isolation.thread.timeoutInMilliseconds=2000 
# two strategy = Thread and semophore , Thread - IO calls, semaphore - internal
hystrix.command.postTokenCommand.execution.isolation.strategy=THREAD
hystrix.command.postTokenCommand.execution.timeout.enabled=true
hystrix.command.postTokenCommand.execution.isolation.thread.interruptOnTimeout=true
hystrix.command.postTokenCommand.execution.isolation.thread.interruptOnCancel=false
#fallback
hystrix.command.postTokenCommand.fallback.enabled=true
hystrix.command.postTokenCommand.fallback.isolation.semaphore.maxConcurrentRequests=50
#circuitBreaker
hystrix.command.postTokenCommand.circuitBreaker.enabled=true
hystrix.command.postTokenCommand.circuitBreaker.forceOpen=false
hystrix.command.postTokenCommand.circuitBreaker.forceClosed=false
hystrix.command.postTokenCommand.circuitBreaker.sleepWindowInMilliseconds=5000
# this is the % of records should fail in order to open the circuit
hystrix.command.postTokenCommand.circuitBreaker.errorThresholdPercentage=30
# window of the request
hystrix.command.postTokenCommand.circuitBreaker.requestVolumeThreshold=20
hystrix.command.postTokenCommand.metrics.rollingStats.timeInMilliseconds=10000
#threadpool
# core size - threads in thread pool
hystrix.threadpool.postTokenCommand.coreSize=15
hystrix.threadpool.postTokenCommand.maximumSize=20
hystrix.threadpool.postTokenCommand.maxQueueSize=40
hystrix.threadpool.postTokenCommand.queueSizeRejectionThreshold=40
hystrix.threadpool.postTokenCommand.allowMaximumSizeToDivergeFromCoreSize=true
hystrix.threadpool.postTokenCommand.metrics.rollingStats.timeInMilliseconds=10000



logging.level.com=INFO
logging.config=classpath:log4j2-local.xml